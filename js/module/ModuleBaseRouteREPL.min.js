class BaseRouteREPL{constructor(){this._Subscibers=[],this._StrInQueue={},this._DefConsole=eval(E.getConsole()),this._IncrVal=1,this._MasterID=null,this._IsInited=!1,this._EchoIsEnabled=!1}get NEW_MASTER_COMMAND(){return"@CHANGE_MASTER@"}get IncrID(){return++this._IncrVal}Init(){this._IsInited=!0,this.AddSub({ID:"EWI",callback:this._DefConsole.write.bind(this._DefConsole)}),this._MasterID="EWI",this.InitLoopBackB(),this.InitDefDevice()}InitLoopBackB(){LoopbackA.setConsole(),LoopbackB.on("data",data=>{this.GetFromREPL(data)})}InitDefDevice(){this._DefConsole.on("data",data=>{this._EchoIsEnabled&&this._DefConsole.write(data),this.Receive({ID:"EWI",content:data})})}NotifyAllExcept(_message,_exceptions){_exceptions=_exceptions||[],this._Subscibers.forEach(sub=>{_exceptions.includes(sub.ID)||sub.callback(_message)})}GetFromREPL(_data){this._DefConsole.write(_data),this.NotifyAllExcept(this.ToMsgPattern(_data),["EWI"])}Receive(_pack){return!!this._Subscibers.map(sub=>sub.ID).includes(_pack.ID)&&(this._StrInQueue[_pack.ID]?this._StrInQueue[_pack.ID].push(_pack.content):this._StrInQueue[_pack.ID]=[_pack.content],_pack.content.endsWith("\r")&&this.OnNewCommand(_pack.ID),!0)}OnNewCommand(_id){let command=this._StrInQueue[_id].join("");this._StrInQueue[_id]=[],-1!==command.indexOf(this.NEW_MASTER_COMMAND)&&_id!==this._MasterID&&(E.setConsole(this._DefConsole),this._MasterID=_id,this.NotifyAllExcept(this.ToMsgPatter(`Info>> New MasterREPL, ID: ${this._MasterID}`)),setTimeout(()=>{E.setConsole(LoopbackA)},0)),this._MasterID===_id&&(LoopbackB.write(command),this.NotifyAllExcept(this.ToMsgPattern(command,_id),[this._MasterID]))}AddSub(subscriber){return!this._Subscibers.map(sub=>sub.ID).includes(subscriber.ID)&&(this._IsInited||this.Init(),this._Subscibers.push(subscriber),!0)}RemoveSubByID(_id){return this._Subscibers.forEach((sub,index)=>{if(sub.ID===_id)return this._Subscibers.splice(index,1),!0}),!1}SetEchoMode(_bool){this._EchoIsEnabled=Boolean(_bool)}ToMsgPattern(_string,_id){return _id?`${this.IncrID} <${_id}> ${_string}}`:`${this.IncrID} ${_string}`}}exports=BaseRouteREPL;