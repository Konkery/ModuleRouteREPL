class ProxyWS{constructor(_wss){this._WSS=_wss,this._Sub={repl:[],sensor:[],process:[]},this.name="ProxyWS",this._SubID={},Object.on("repl-sub",(id,key)=>{this._Sub.repl.push(key),this._SubID[id]||(this._SubID[id]=key)}),Object.on("sensor-sub",(id,key)=>{this._Sub.sensor.push(key),this._SubID[id]||(this._SubID[id]=key)}),Object.on("process-sub",(id,key)=>{this._Sub.process.push(key),this._SubID[id]||(this._SubID[id]=key)}),Object.on("repl-read",msg=>{this.Send(this.FormPackREPL(msg),this._Sub.repl)}),Object.on("sensor-read",msg=>{this.Send(this.FormPackSensor(msg),this._Sub.sensor)}),Object.on("process-read",msg=>{})}Receive(_data,_key){let obj=null;try{obj=JSON.parse(_data)}catch(e){throw new err("Incorrect JSON data")}let key=_key,meta_crc=obj.MetaData.CRC,actual_crc;if(delete obj.MetaData.CRC,E.CRC32(JSON.stringify(obj))===meta_crc){let flag=!0;obj.MetaData.Command.forEach(comObj=>{flag&&(comObj.com.endsWith("sub")||comObj.com.endsWith("cm")?(Object.emit(comObj.com,obj.MetaData.ID,key),flag=!1):Object.emit(comObj.com,comObj.arg,obj.MetaData.ID))})}}Send(msg,keys){this._WSS.Notify(msg,keys)}RemoveSub(key){this._Sub.forEach(subs=>{let i=subs.indexOf(key);-1!==key&&subs.splice(i,1)});for(let k of this._SubID)this._SubID[k]===key&&delete this._SubID[k];0===this._Sub.repl.length&&Object.emit("repl-cm","EWI")}FormPackREPL(msg){return JSON.stringify({Metadata:{Type:"controller",ID:process.env.BOARD,TimeStamp2:~~getTime(),Repl:{com:msg}}})}FormPackSensor(msg){return JSON.stringify({Metadata:{Type:"controller",ID:process.env.BOARD,TimeStamp2:~~getTime(),Sensor:{ID:"54-54",Name:"Vova",Type:"meas",TypeOutSignal:"analog",TypeInSignal:"analog",NumPortsRequired:[1],NumChannel:1,Bus:["i2c"]}},Value:msg})}}exports=ProxyWS;