class Sensor{constructor(){this._Sensors={},Object.on("sensor-ask",(sensorName,period,arg)=>{this.StartNotify(sensorName,period,arg)}),Object.on("sensor-stop",(sensorName,arg)=>{let intervName=this.GetIntervalName(sensorName,arg);clearInterval(this[intervName]),this[intervName]=null})}GetIntervalName(sensorName,arg){return`_${sensorName}_${arg}_interval`}Add(sensor){if(this._Sensors[sensor.name])throw new Error;this._Sensors[sensor.name]=sensor}Remove(sensorName){}StartNotify(sensorName,period,arg){if(!this._Sensors[sensorName])throw new Error;if(!this._Sensors[sensorName][arg])throw new Error;let intervName=this.GetIntervalName(sensorName,arg);this[intervName]&&clearInterval(intervName),this[intervName]=setInterval(()=>{Object.emit("sensor-read",{name:this._Sensors[sensorName].name,value:this._Sensors[sensorName][arg]})},period)}}exports=Sensor;