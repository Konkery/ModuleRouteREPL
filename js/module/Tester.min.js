class Tester{constructor(){this._InBuffer="",this._IsReceiving=!1,this._BrStack=[],this._Subs={repl:[],"sensor-manager":[],process:[]},Object.on("repl-sub",key=>this._Subs.repl.push(key)),Object.on("sensor-sub",key=>this._Subs.sensor.push(key)),Object.on("repl-read",msg=>{this.Send(msg,this._Subs.repl)}),Object.on("sensor-read",msg=>{this.Send(JSON.stringify(msg),this._Subs.sensor)})}Start(){E.setConsole(LoopbackA,{force:!0}),USB.on("data",data=>{data.split("").forEach(char=>{"{"===char&&(this._IsReceiving=!0,this._BrStack.push(char)),this._IsReceiving&&(USB.write(char),this._InBuffer+=char,"}"===char&&(this._BrStack.pop(),this._BrStack.length||(this.HandleMsg(this._InBuffer),this._InBuffer="",this._IsReceiving=!1,USB.write("\r\n"))))})})}HandleMsg(_data){let msg=_data,key="EWI",obj=null;try{obj=JSON.parse(msg)}catch(error){return!1}let meta_crc=obj.MetaData.CRC,actual_crc;if(delete obj.MetaData.CRC,E.CRC32(JSON.stringify(obj))===meta_crc)return obj.MetaData.Command.forEach(comObj=>{comObj.com.endsWith("sub")?Object.emit(comObj.com,key):comObj.com.endsWith("cm")?Object.emit(comObj.com,obj.MetaData.ID):Object.emit.apply(Object,[comObj.com].concat(comObj.arg,[obj.MetaData.ID]))}),!0}Send(msg,_subs){USB.write(msg+"\n")}FormPackSensor(msg){return{Metadata:{Type:"controller",Sensor:{Name:msg.name}},Value:msg.value}}FormPackREPL(msg){return{Metadata:{Type:"controller",Repl:{com:msg}}}}}exports=Tester;