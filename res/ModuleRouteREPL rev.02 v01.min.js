class BaseRouteREPL{constructor(){this._InBuffer="",this._InSubBuffer=[],this._DefConsole=eval(E.getConsole()),this._IncrVal=0,this._MasterID="EWI",this._IsOn=!1,Object.on("repl-sub",()=>{this._IsOn||this.RouteOn()}),this._Logs={logs:[],i:0,max_i:15,add:function(log){this.logs[this.i]=log,this.i++,this.i===this.max_i&&(this.i=0)},toString:()=>this.logs}}get NEW_MASTER_COMMAND(){return"@@C_M@@"}get IncrID(){return++this._IncrVal}InitEvents(){Object.on("repl-write",(command,id)=>{id===this._MasterID&&this.Receive(`${command}\r`)}),Object.on("repl-cm",id=>this.ChangeMaster(id))}RouteOn(){this.InitEvents(),LoopbackB.on("data",data=>{this.LoopbackBHandler(data)}),this._IsOn=!0}LoopbackBHandler(data){let log=this.ToMsgPattern(data);Object.emit("repl-read",log),this._Logs.add(log)}Receive(_command){if(!this._IsOn)return!1;let command=_command,log=this.ToMsgPattern(command);return this._Logs.add(log),this.emit("repl-read",log),LoopbackB.write(command),!0}ChangeMaster(_id){let id=_id;this._MasterID=id,this.emit("repl-read",this.ToMsgPattern(`Info>> New MasterREPL, ID: ${this._MasterID}`))}SetOff(){E.setConsole(this._DefConsole,{force:!0}),this._IsOn=!1}ToMsgPattern(_string,_id){let str=_string,id=_id;return id?`${this.IncrID} <${id}> ${str}}`:str}}exports=BaseRouteREPL;